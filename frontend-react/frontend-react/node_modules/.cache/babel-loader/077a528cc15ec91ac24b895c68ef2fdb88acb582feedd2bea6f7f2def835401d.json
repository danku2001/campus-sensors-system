{"ast":null,"code":"const API = process.env.REACT_APP_API_BASE || 'http://localhost:3001';\nexport async function listSensors(areaId) {\n  const qs = new URLSearchParams();\n  if (areaId) qs.set('areaId', areaId);\n  const r = await fetch(`${API}/api/sensors?${qs.toString()}`);\n  if (!r.ok) throw new Error('listSensors failed');\n  return r.json();\n}\nexport async function getSensorValues(sensorId, limit = 5) {\n  const r = await fetch(`${API}/api/sensors/${sensorId}/values?limit=${limit}`);\n  if (!r.ok) throw new Error('getSensorValues failed');\n  return r.json();\n}\nexport async function createSensor(payload) {\n  const r = await fetch(`${API}/api/sensors`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error('createSensor failed');\n  return r.json();\n}\nexport async function updateSensor(id, payload) {\n  const r = await fetch(`${API}/api/sensors/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error('updateSensor failed');\n  return r.json();\n}\nexport async function deleteSensor(id) {\n  const r = await fetch(`${API}/api/sensors/${id}`, {\n    method: 'DELETE'\n  });\n  if (!r.ok) throw new Error('deleteSensor failed');\n  return r.json();\n}\nexport async function setSensorActive(id, is_active) {\n  const r = await fetch(`${API}/api/sensors/${id}/active`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      is_active\n    })\n  });\n  if (!r.ok) throw new Error('setSensorActive failed');\n  return r.json();\n}\nexport async function updateSensorPosition(id, x, y) {\n  const r = await fetch(`${API}/api/sensors/${id}/position`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      x,\n      y\n    })\n  });\n  if (!r.ok) throw new Error('updateSensorPosition failed');\n  return r.json();\n}","map":{"version":3,"names":["API","process","env","REACT_APP_API_BASE","listSensors","areaId","qs","URLSearchParams","set","r","fetch","toString","ok","Error","json","getSensorValues","sensorId","limit","createSensor","payload","method","headers","body","JSON","stringify","updateSensor","id","deleteSensor","setSensorActive","is_active","updateSensorPosition","x","y"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/api/sensors.js"],"sourcesContent":["const API = process.env.REACT_APP_API_BASE || 'http://localhost:3001';\r\n\r\nexport async function listSensors(areaId) {\r\n  const qs = new URLSearchParams(); if (areaId) qs.set('areaId', areaId);\r\n  const r = await fetch(`${API}/api/sensors?${qs.toString()}`);\r\n  if (!r.ok) throw new Error('listSensors failed');\r\n  return r.json();\r\n}\r\nexport async function getSensorValues(sensorId, limit = 5) {\r\n  const r = await fetch(`${API}/api/sensors/${sensorId}/values?limit=${limit}`);\r\n  if (!r.ok) throw new Error('getSensorValues failed');\r\n  return r.json();\r\n}\r\nexport async function createSensor(payload) {\r\n  const r = await fetch(`${API}/api/sensors`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n  if (!r.ok) throw new Error('createSensor failed');\r\n  return r.json();\r\n}\r\nexport async function updateSensor(id, payload) {\r\n  const r = await fetch(`${API}/api/sensors/${id}`, { method: 'PUT', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n  if (!r.ok) throw new Error('updateSensor failed');\r\n  return r.json();\r\n}\r\nexport async function deleteSensor(id) {\r\n  const r = await fetch(`${API}/api/sensors/${id}`, { method: 'DELETE' });\r\n  if (!r.ok) throw new Error('deleteSensor failed');\r\n  return r.json();\r\n}\r\nexport async function setSensorActive(id, is_active) {\r\n  const r = await fetch(`${API}/api/sensors/${id}/active`, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ is_active }) });\r\n  if (!r.ok) throw new Error('setSensorActive failed');\r\n  return r.json();\r\n}\r\nexport async function updateSensorPosition(id, x, y) {\r\n  const r = await fetch(`${API}/api/sensors/${id}/position`, { method: 'PATCH', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ x, y }) });\r\n  if (!r.ok) throw new Error('updateSensorPosition failed');\r\n  return r.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAErE,OAAO,eAAeC,WAAWA,CAACC,MAAM,EAAE;EACxC,MAAMC,EAAE,GAAG,IAAIC,eAAe,CAAC,CAAC;EAAE,IAAIF,MAAM,EAAEC,EAAE,CAACE,GAAG,CAAC,QAAQ,EAAEH,MAAM,CAAC;EACtE,MAAMI,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgBM,EAAE,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC;EAC5D,IAAI,CAACF,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAChD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeC,eAAeA,CAACC,QAAQ,EAAEC,KAAK,GAAG,CAAC,EAAE;EACzD,MAAMR,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgBgB,QAAQ,iBAAiBC,KAAK,EAAE,CAAC;EAC7E,IAAI,CAACR,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACpD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeI,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMV,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,cAAc,EAAE;IAAEoB,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAAE,CAAC,CAAC;EAC/I,IAAI,CAACV,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeW,YAAYA,CAACC,EAAE,EAAEP,OAAO,EAAE;EAC9C,MAAMV,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgB0B,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE,KAAK;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAAE,CAAC,CAAC;EACpJ,IAAI,CAACV,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAea,YAAYA,CAACD,EAAE,EAAE;EACrC,MAAMjB,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgB0B,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAS,CAAC,CAAC;EACvE,IAAI,CAACX,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAec,eAAeA,CAACF,EAAE,EAAEG,SAAS,EAAE;EACnD,MAAMpB,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgB0B,EAAE,SAAS,EAAE;IAAEN,MAAM,EAAE,OAAO;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEK;IAAU,CAAC;EAAE,CAAC,CAAC;EACnK,IAAI,CAACpB,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACpD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAegB,oBAAoBA,CAACJ,EAAE,EAAEK,CAAC,EAAEC,CAAC,EAAE;EACnD,MAAMvB,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGV,GAAG,gBAAgB0B,EAAE,WAAW,EAAE;IAAEN,MAAM,EAAE,OAAO;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEO,CAAC;MAAEC;IAAE,CAAC;EAAE,CAAC,CAAC;EAChK,IAAI,CAACvB,CAAC,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EACzD,OAAOJ,CAAC,CAACK,IAAI,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}