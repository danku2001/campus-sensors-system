{"ast":null,"code":"// src/api/sensors.js\nconst BASE = \"/sensors\"; // אם הראוטים אצלך הם ב־\"/\" בלבד, שנה ל: const BASE = \"\";\n\nexport async function listSensors() {\n  const r = await fetch(`${BASE}`);\n  if (!r.ok) throw new Error(\"listSensors failed\");\n  return r.json();\n}\nexport async function createSensor(payload) {\n  const r = await fetch(`${BASE}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error(\"createSensor failed\");\n  return r.json();\n}\nexport async function updateSensor(id, payload) {\n  const r = await fetch(`${BASE}/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error(\"updateSensor failed\");\n  return r.json();\n}\nexport async function deleteSensor(id) {\n  const r = await fetch(`${BASE}/${id}`, {\n    method: \"DELETE\"\n  });\n  if (!r.ok) throw new Error(\"deleteSensor failed\");\n  return r.json();\n}","map":{"version":3,"names":["BASE","listSensors","r","fetch","ok","Error","json","createSensor","payload","method","headers","body","JSON","stringify","updateSensor","id","deleteSensor"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/api/sensors.js"],"sourcesContent":["// src/api/sensors.js\r\nconst BASE = \"/sensors\"; // אם הראוטים אצלך הם ב־\"/\" בלבד, שנה ל: const BASE = \"\";\r\n\r\nexport async function listSensors() {\r\n  const r = await fetch(`${BASE}`);\r\n  if (!r.ok) throw new Error(\"listSensors failed\");\r\n  return r.json();\r\n}\r\n\r\nexport async function createSensor(payload) {\r\n  const r = await fetch(`${BASE}`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n  if (!r.ok) throw new Error(\"createSensor failed\");\r\n  return r.json();\r\n}\r\n\r\nexport async function updateSensor(id, payload) {\r\n  const r = await fetch(`${BASE}/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n  if (!r.ok) throw new Error(\"updateSensor failed\");\r\n  return r.json();\r\n}\r\n\r\nexport async function deleteSensor(id) {\r\n  const r = await fetch(`${BASE}/${id}`, { method: \"DELETE\" });\r\n  if (!r.ok) throw new Error(\"deleteSensor failed\");\r\n  return r.json();\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,IAAI,GAAG,UAAU,CAAC,CAAC;;AAEzB,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,EAAE,CAAC;EAChC,IAAI,CAACE,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAChD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeC,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMN,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,EAAE,EAAE;IAC/BS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACN,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeQ,YAAYA,CAACC,EAAE,EAAEP,OAAO,EAAE;EAC9C,MAAMN,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,IAAIe,EAAE,EAAE,EAAE;IACrCN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACN,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeU,YAAYA,CAACD,EAAE,EAAE;EACrC,MAAMb,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGH,IAAI,IAAIe,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAE;EAAS,CAAC,CAAC;EAC5D,IAAI,CAACP,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACjD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}