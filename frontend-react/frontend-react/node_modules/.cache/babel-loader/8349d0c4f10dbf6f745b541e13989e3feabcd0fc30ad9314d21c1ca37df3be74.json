{"ast":null,"code":"// בזכות proxy בקובץ package.json אנו משתמשים בנתיבים יחסיים\nexport async function listAreasWithShading() {\n  const r = await fetch(\"/api/shading/areas\");\n  if (!r.ok) throw new Error(\"failed to load shading areas\");\n  return r.json();\n}\nexport async function attachShading(area_id) {\n  const r = await fetch(\"/api/shading/attach\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      area_id\n    })\n  });\n  if (!r.ok) throw new Error(\"failed to attach shading\");\n  return r.json();\n}\nexport async function setShading(area_id, status, added_by_user = true) {\n  const r = await fetch(\"/api/shading/set\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      area_id,\n      status,\n      added_by_user\n    })\n  });\n  if (!r.ok) throw new Error(\"failed to set shading\");\n  return r.json();\n}\nconst base = '';\nexport const ShadingAPI = {\n  getForArea: areaId => fetch(`${base}/api/shading/${areaId}`).then(r => r.json()),\n  setStatus: (areaId, status, added_by_user = 1) => fetch(`${base}/api/shading/${areaId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      status,\n      added_by_user\n    })\n  }).then(r => r.json())\n};","map":{"version":3,"names":["listAreasWithShading","r","fetch","ok","Error","json","attachShading","area_id","method","headers","body","JSON","stringify","setShading","status","added_by_user","base","ShadingAPI","getForArea","areaId","then","setStatus"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/api/shading.js"],"sourcesContent":["// בזכות proxy בקובץ package.json אנו משתמשים בנתיבים יחסיים\nexport async function listAreasWithShading() {\n  const r = await fetch(\"/api/shading/areas\");\n  if (!r.ok) throw new Error(\"failed to load shading areas\");\n  return r.json();\n}\n\nexport async function attachShading(area_id) {\n  const r = await fetch(\"/api/shading/attach\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ area_id })\n  });\n  if (!r.ok) throw new Error(\"failed to attach shading\");\n  return r.json();\n}\n\nexport async function setShading(area_id, status, added_by_user = true) {\n  const r = await fetch(\"/api/shading/set\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ area_id, status, added_by_user })\n  });\n  if (!r.ok) throw new Error(\"failed to set shading\");\n  return r.json();\n}\n\nconst base = '';\nexport const ShadingAPI = {\n  getForArea: (areaId) => fetch(`${base}/api/shading/${areaId}`).then(r => r.json()),\n  setStatus: (areaId, status, added_by_user = 1) =>\n    fetch(`${base}/api/shading/${areaId}`, {\n      method: 'PUT',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({ status, added_by_user })\n    }).then(r => r.json())\n};\n\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,oBAAoBA,CAAA,EAAG;EAC3C,MAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,oBAAoB,CAAC;EAC3C,IAAI,CAACD,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC1D,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeC,aAAaA,CAACC,OAAO,EAAE;EAC3C,MAAMN,CAAC,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;IAC3CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL;IAAQ,CAAC;EAClC,CAAC,CAAC;EACF,IAAI,CAACN,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACtD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeQ,UAAUA,CAACN,OAAO,EAAEO,MAAM,EAAEC,aAAa,GAAG,IAAI,EAAE;EACtE,MAAMd,CAAC,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;IACxCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,OAAO;MAAEO,MAAM;MAAEC;IAAc,CAAC;EACzD,CAAC,CAAC;EACF,IAAI,CAACd,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACnD,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AAEA,MAAMW,IAAI,GAAG,EAAE;AACf,OAAO,MAAMC,UAAU,GAAG;EACxBC,UAAU,EAAGC,MAAM,IAAKjB,KAAK,CAAC,GAAGc,IAAI,gBAAgBG,MAAM,EAAE,CAAC,CAACC,IAAI,CAACnB,CAAC,IAAIA,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EAClFgB,SAAS,EAAEA,CAACF,MAAM,EAAEL,MAAM,EAAEC,aAAa,GAAG,CAAC,KAC3Cb,KAAK,CAAC,GAAGc,IAAI,gBAAgBG,MAAM,EAAE,EAAE;IACrCX,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAC,cAAc,EAAC;IAAkB,CAAC;IAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEE,MAAM;MAAEC;IAAc,CAAC;EAChD,CAAC,CAAC,CAACK,IAAI,CAACnB,CAAC,IAAIA,CAAC,CAACI,IAAI,CAAC,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}