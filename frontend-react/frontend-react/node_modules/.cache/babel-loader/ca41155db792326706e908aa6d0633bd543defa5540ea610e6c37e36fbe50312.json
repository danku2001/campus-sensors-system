{"ast":null,"code":"// src/api/areas.js\nconst CANDIDATES = [\"areas\", \"api/areas\", \"areas/list\", \"area\", \"areas/all\"];\nasync function reqOnce(url, opts) {\n  var _ref, _data$data;\n  const r = await fetch(url, opts);\n  if (!r.ok) {\n    const txt = await r.text().catch(() => \"\");\n    throw new Error(`HTTP ${r.status} ${url} :: ${txt}`);\n  }\n  const data = await r.json();\n  return Array.isArray(data) ? data : (_ref = (_data$data = data.data) !== null && _data$data !== void 0 ? _data$data : data.areas) !== null && _ref !== void 0 ? _ref : data;\n}\nasync function request(path, opts) {\n  var _last;\n  for (const p of [path, path.replace(/^\\//, \"\")]) {\n    try {\n      return await reqOnce(`/${p}`, opts);\n    } catch (_) {}\n  }\n  for (const p of [path, path.replace(/^\\//, \"\")]) {\n    try {\n      return await reqOnce(`http://localhost:3001/${p}`, opts);\n    } catch (e) {\n      var last = e;\n    }\n  }\n  throw (_last = last) !== null && _last !== void 0 ? _last : new Error(\"request failed\");\n}\nexport async function listAreas() {\n  for (const p of CANDIDATES) {\n    try {\n      return await request(p);\n    } catch (_) {}\n  }\n  throw new Error(\"listAreas failed\");\n}\nexport async function createArea(payload) {\n  return request(\"areas\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n}\nexport async function updateArea(id, payload) {\n  return request(`areas/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  });\n}\nexport async function deleteArea(id) {\n  return request(`areas/${id}`, {\n    method: \"DELETE\"\n  });\n}","map":{"version":3,"names":["CANDIDATES","reqOnce","url","opts","_ref","_data$data","r","fetch","ok","txt","text","catch","Error","status","data","json","Array","isArray","areas","request","path","_last","p","replace","_","e","last","listAreas","createArea","payload","method","headers","body","JSON","stringify","updateArea","id","deleteArea"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/api/areas.js"],"sourcesContent":["// src/api/areas.js\r\nconst CANDIDATES = [\"areas\", \"api/areas\", \"areas/list\", \"area\", \"areas/all\"];\r\n\r\nasync function reqOnce(url, opts) {\r\n  const r = await fetch(url, opts);\r\n  if (!r.ok) {\r\n    const txt = await r.text().catch(()=>\"\");\r\n    throw new Error(`HTTP ${r.status} ${url} :: ${txt}`);\r\n  }\r\n  const data = await r.json();\r\n  return Array.isArray(data) ? data : (data.data ?? data.areas ?? data);\r\n}\r\n\r\nasync function request(path, opts) {\r\n  for (const p of [path, path.replace(/^\\//,\"\")]) {\r\n    try { return await reqOnce(`/${p}`, opts); } catch (_) {}\r\n  }\r\n  for (const p of [path, path.replace(/^\\//,\"\")]) {\r\n    try { return await reqOnce(`http://localhost:3001/${p}`, opts); } catch (e) { var last = e; }\r\n  }\r\n  throw last ?? new Error(\"request failed\");\r\n}\r\n\r\nexport async function listAreas() {\r\n  for (const p of CANDIDATES) {\r\n    try { return await request(p); } catch (_) {}\r\n  }\r\n  throw new Error(\"listAreas failed\");\r\n}\r\n\r\nexport async function createArea(payload) {\r\n  return request(\"areas\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\":\"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n}\r\nexport async function updateArea(id, payload) {\r\n  return request(`areas/${id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\":\"application/json\" },\r\n    body: JSON.stringify(payload),\r\n  });\r\n}\r\nexport async function deleteArea(id) {\r\n  return request(`areas/${id}`, { method:\"DELETE\" });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}