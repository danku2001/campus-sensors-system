{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAN\\\\Desktop\\\\fullProject\\\\frontend-react\\\\frontend-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './styles.css';\nimport Dashboard from './components/Dashboard.jsx';\nimport Modal from './components/Modal.jsx';\nimport AreaForm from './components/forms/AreaForm.jsx';\nimport SensorForm from './components/forms/SensorForm.jsx';\nimport { ToastProvider, useToasts } from './components/Toasts.jsx';\nimport { listAreas, createArea, updateArea, deleteArea } from './api/areas';\nimport { listSensors, createSensor, updateSensor, deleteSensor, setSensorActive, updateSensorPosition, getSensorValues } from './api/sensors';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst POLL_MS = 15000; // רענון רשימת סנסורים\nconst OFFLINE_MS = 10 * 60 * 1000; // 10 דקות ללא קריאה -> לא מגיב\nconst OFFLINE_CHECK_MS = 60000; // בדיקת \"לא מגיב\" כל דקה\n\nfunction AppInner() {\n  _s();\n  const {\n    push\n  } = useToasts();\n  const [areas, setAreas] = useState([]);\n  const [areaId, setAreaId] = useState(null);\n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [adminMode, setAdminMode] = useState(false);\n  const [areaModalOpen, setAreaModalOpen] = useState(false);\n  const [editingArea, setEditingArea] = useState(null);\n  const [sensorModalOpen, setSensorModalOpen] = useState(false);\n  const [editingSensor, setEditingSensor] = useState(null);\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [placeMode, setPlaceMode] = useState(null);\n\n  // מזהה סנסורים לא מגיבים (IDs)\n  const [offlineIds, setOfflineIds] = useState(new Set());\n  useEffect(() => {\n    setLoading(true);\n    listAreas().then(d => {\n      setAreas(d);\n      if (d[0]) setAreaId(d[0].id);\n    }).catch(e => {\n      setError(e.message);\n      push('error', 'טעינת אזורים נכשלה');\n    }).finally(() => setLoading(false));\n  }, []);\n\n  // טעינה + רענון אוטומטי של סנסורים\n  useEffect(() => {\n    if (!areaId) {\n      setSensors([]);\n      return;\n    }\n    let alive = true;\n    async function load() {\n      try {\n        const xs = await listSensors(areaId);\n        // הזרקת דגל __offline לפני ההצגה\n        const withFlags = xs.map(s => ({\n          ...s,\n          __offline: offlineIds.has(s.id)\n        }));\n        if (alive) setSensors(withFlags);\n      } catch (e) {\n        setError(e.message);\n        push('error', 'טעינת סנסורים נכשלה');\n      }\n    }\n    load();\n    const t = setInterval(load, POLL_MS);\n    return () => {\n      alive = false;\n      clearInterval(t);\n    };\n  }, [areaId, offlineIds, push]);\n\n  // בדיקת \"לא מגיב\" – פינג לקריאה אחת לכל סנסור כל דקה\n  useEffect(() => {\n    if (!areaId || sensors.length === 0) return;\n    let alive = true;\n    async function check() {\n      try {\n        const ids = new Set(offlineIds);\n        await Promise.all(sensors.map(async s => {\n          try {\n            var _vs$;\n            const vs = await getSensorValues(s.id, 1);\n            const ts = vs !== null && vs !== void 0 && (_vs$ = vs[0]) !== null && _vs$ !== void 0 && _vs$.recorded_at ? new Date(vs[0].recorded_at).getTime() : 0;\n            const isOffline = !ts || Date.now() - ts > OFFLINE_MS;\n            if (isOffline) ids.add(s.id);else ids.delete(s.id);\n          } catch {\n            ids.add(s.id);\n          } // אם כשל – נחשב לא מגיב\n        }));\n        if (alive) setOfflineIds(ids);\n      } catch {/* מתעלמים */}\n    }\n    check();\n    const t = setInterval(check, OFFLINE_CHECK_MS);\n    return () => {\n      alive = false;\n      clearInterval(t);\n    };\n  }, [areaId, sensors]);\n  function openAddArea() {\n    setEditingArea(null);\n    setAreaModalOpen(true);\n  }\n  function openEditArea() {\n    if (!areaId) return push('error', 'בחר אזור');\n    setEditingArea(areas.find(a => a.id === areaId) || null);\n    setAreaModalOpen(true);\n  }\n  async function onSubmitArea(payload) {\n    try {\n      if (editingArea) {\n        const upd = await updateArea(editingArea.id, payload);\n        setAreas(xs => xs.map(a => a.id === upd.id ? upd : a));\n        push('info', 'האזור עודכן');\n      } else {\n        const created = await createArea(payload);\n        setAreas(xs => [...xs, created]);\n        setAreaId(created.id);\n        push('info', 'אזור נוסף');\n      }\n      setAreaModalOpen(false);\n    } catch (e) {\n      setError(e.message);\n      push('error', 'שמירת אזור נכשלה');\n    }\n  }\n  async function onDeleteArea() {\n    if (!areaId) return push('error', 'בחר אזור למחיקה');\n    if (!confirm('למחוק את האזור?')) return;\n    try {\n      await deleteArea(areaId);\n      setAreas(xs => xs.filter(a => a.id !== areaId));\n      setAreaId(null);\n      setSensors([]);\n      push('info', 'האזור נמחק');\n    } catch (e) {\n      setError(e.message);\n      push('error', 'מחיקת אזור נכשלה');\n    }\n  }\n  function openAddSensor() {\n    if (!areaId) return push('error', 'בחר אזור קודם');\n    setPlaceMode({\n      kind: 'sensor'\n    });\n    push('info', 'לחץ על המפה כדי למקם סנסור');\n  }\n  function openAddShade() {\n    if (!areaId) return push('error', 'בחר אזור קודם');\n    setPlaceMode({\n      kind: 'shade'\n    });\n    push('info', 'לחץ על המפה כדי למקם מערכת הצללה');\n  }\n  function openEditSensorFromDrawer(s) {\n    if (!s) return;\n    setSelectedSensor(s);\n    getSensorValues(s.id, 50).then(setSelectedValues).catch(() => setSelectedValues([]));\n  }\n  async function onSubmitSensor(payload) {\n    try {\n      if (editingSensor && editingSensor.id) {\n        const upd = await updateSensor(editingSensor.id, payload);\n        setSensors(xs => xs.map(s => s.id === upd.id ? {\n          ...upd,\n          __offline: offlineIds.has(upd.id)\n        } : s));\n        push('info', 'הסנסור עודכן');\n      } else {\n        const created = await createSensor({\n          ...payload,\n          area_id: areaId\n        });\n        setSensors(xs => [...xs, {\n          ...created,\n          __offline: false\n        }]);\n        push('info', payload.type === 'shade' ? 'יחידת הצללה נוספה' : 'סנסור נוסף');\n      }\n      setSensorModalOpen(false);\n      setEditingSensor(null);\n    } catch (e) {\n      setError(e.message);\n      push('error', 'שמירת סנסור נכשלה');\n    }\n  }\n  async function onDeleteSensorFromDrawer() {\n    if (!selectedSensor) return;\n    if (!confirm('למחוק את הסנסור?')) return;\n    try {\n      await deleteSensor(selectedSensor.id);\n      setSensors(xs => xs.filter(s => s.id !== selectedSensor.id));\n      setSelectedSensor(null);\n      push('info', 'סנסור נמחק');\n    } catch (e) {\n      setError(e.message);\n      push('error', 'מחיקה נכשלה');\n    }\n  }\n  async function onToggleActiveFromDrawer() {\n    if (!selectedSensor) return;\n    try {\n      const upd = await setSensorActive(selectedSensor.id, !selectedSensor.is_active);\n      setSensors(xs => xs.map(s => s.id === upd.id ? {\n        ...upd,\n        __offline: offlineIds.has(upd.id)\n      } : s));\n      setSelectedSensor(upd);\n      push('info', `סטטוס: ${upd.is_active ? 'פעיל/פתוח' : 'כבוי/סגור'}`);\n    } catch (e) {\n      setError(e.message);\n      push('error', 'עדכון סטטוס נכשל');\n    }\n  }\n  async function onMoveSensor(id, x, y) {\n    try {\n      const upd = await updateSensorPosition(id, x, y);\n      setSensors(xs => xs.map(s => s.id === id ? {\n        ...upd,\n        __offline: offlineIds.has(id)\n      } : s));\n      if (selectedSensor && selectedSensor.id === id) setSelectedSensor(upd);\n    } catch (e) {\n      setError(e.message);\n      push('error', 'עדכון מיקום נכשל');\n    }\n  }\n  function onPlaceRequest(x, y) {\n    if (!placeMode) return;\n    if (placeMode.kind === 'shade') {\n      setEditingSensor({\n        name: 'Shading',\n        type: 'shade',\n        x,\n        y,\n        is_active: true\n      });\n    } else {\n      setEditingSensor({\n        name: 'Sensor',\n        type: '',\n        x,\n        y,\n        is_active: true\n      });\n    }\n    setSensorModalOpen(true);\n    setPlaceMode(null);\n  }\n  async function onMapSizeDetected(nw, nh) {\n    const area = (areas || []).find(a => a.id === areaId);\n    if (!area) return;\n    if (!area.width || !area.height) {\n      try {\n        const upd = await updateArea(area.id, {\n          width: nw,\n          height: nh\n        });\n        setAreas(xs => xs.map(a => a.id === upd.id ? upd : a));\n      } catch {/* ממשיכים גם בלי */}\n    }\n  }\n  async function onShadeAutoApply(shouldOpen) {\n    try {\n      const shades = (sensors || []).filter(s => String(s.type || '').toLowerCase() === 'shade');\n      for (const sh of shades) {\n        if (Boolean(sh.is_active) !== Boolean(shouldOpen)) {\n          const upd = await setSensorActive(sh.id, shouldOpen);\n          setSensors(xs => xs.map(s => s.id === upd.id ? {\n            ...upd,\n            __offline: offlineIds.has(upd.id)\n          } : s));\n          if (selectedSensor && selectedSensor.id === upd.id) setSelectedSensor(upd);\n        }\n      }\n      push('info', shouldOpen ? 'ההצללה נפתחה אוטומטית' : 'ההצללה נסגרה אוטומטית');\n    } catch (e) {\n      setError(e.message);\n      push('error', 'כשל בהפעלת אוטומציה');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n      areas: areas,\n      areaId: areaId,\n      onPickArea: setAreaId,\n      sensors: sensors,\n      selectedSensor: selectedSensor,\n      selectedValues: selectedValues,\n      loading: loading,\n      error: error,\n      adminMode: adminMode,\n      setAdminMode: setAdminMode,\n      onAddArea: openAddArea,\n      onEditArea: openEditArea,\n      onDeleteArea: onDeleteArea,\n      onAddSensor: openAddSensor,\n      onAddShade: openAddShade,\n      onEditSensorFromDrawer: openEditSensorFromDrawer,\n      onDeleteSensorFromDrawer: onDeleteSensorFromDrawer,\n      onToggleActiveFromDrawer: onToggleActiveFromDrawer,\n      onMoveSensor: onMoveSensor,\n      onCloseDrawer: () => {\n        setSelectedSensor(null);\n        setSelectedValues([]);\n      },\n      onMapSizeDetected: onMapSizeDetected,\n      onPlaceRequest: onPlaceRequest,\n      onShadeAutoApply: onShadeAutoApply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: areaModalOpen,\n      title: editingArea ? 'עריכת אזור' : 'אזור חדש',\n      onClose: () => setAreaModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(AreaForm, {\n        initial: editingArea || {},\n        onSubmit: onSubmitArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: sensorModalOpen,\n      title: editingSensor !== null && editingSensor !== void 0 && editingSensor.id ? 'עריכת סנסור' : (editingSensor === null || editingSensor === void 0 ? void 0 : editingSensor.type) === 'shade' ? 'מערכת הצללה חדשה' : 'סנסור חדש',\n      onClose: () => {\n        setSensorModalOpen(false);\n        setEditingSensor(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(SensorForm, {\n        initial: editingSensor || {},\n        areaId: areaId,\n        onSubmit: onSubmitSensor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AppInner, \"QRhSN1rjWj3Jao67qEI0EtIUwCQ=\", false, function () {\n  return [useToasts];\n});\n_c = AppInner;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(ToastProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppInner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 55\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 40\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppInner\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","Dashboard","Modal","AreaForm","SensorForm","ToastProvider","useToasts","listAreas","createArea","updateArea","deleteArea","listSensors","createSensor","updateSensor","deleteSensor","setSensorActive","updateSensorPosition","getSensorValues","jsxDEV","_jsxDEV","Fragment","_Fragment","POLL_MS","OFFLINE_MS","OFFLINE_CHECK_MS","AppInner","_s","push","areas","setAreas","areaId","setAreaId","sensors","setSensors","loading","setLoading","error","setError","adminMode","setAdminMode","areaModalOpen","setAreaModalOpen","editingArea","setEditingArea","sensorModalOpen","setSensorModalOpen","editingSensor","setEditingSensor","selectedSensor","setSelectedSensor","selectedValues","setSelectedValues","placeMode","setPlaceMode","offlineIds","setOfflineIds","Set","then","d","id","catch","e","message","finally","alive","load","xs","withFlags","map","s","__offline","has","t","setInterval","clearInterval","length","check","ids","Promise","all","_vs$","vs","ts","recorded_at","Date","getTime","isOffline","now","add","delete","openAddArea","openEditArea","find","a","onSubmitArea","payload","upd","created","onDeleteArea","confirm","filter","openAddSensor","kind","openAddShade","openEditSensorFromDrawer","onSubmitSensor","area_id","type","onDeleteSensorFromDrawer","onToggleActiveFromDrawer","is_active","onMoveSensor","x","y","onPlaceRequest","name","onMapSizeDetected","nw","nh","area","width","height","onShadeAutoApply","shouldOpen","shades","String","toLowerCase","sh","Boolean","children","onPickArea","onAddArea","onEditArea","onAddSensor","onAddShade","onEditSensorFromDrawer","onCloseDrawer","fileName","_jsxFileName","lineNumber","columnNumber","open","title","onClose","initial","onSubmit","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './styles.css';\nimport Dashboard from './components/Dashboard.jsx';\nimport Modal from './components/Modal.jsx';\nimport AreaForm from './components/forms/AreaForm.jsx';\nimport SensorForm from './components/forms/SensorForm.jsx';\nimport { ToastProvider, useToasts } from './components/Toasts.jsx';\nimport { listAreas, createArea, updateArea, deleteArea } from './api/areas';\nimport { listSensors, createSensor, updateSensor, deleteSensor, setSensorActive, updateSensorPosition, getSensorValues } from './api/sensors';\n\nconst POLL_MS = 15000;      // רענון רשימת סנסורים\nconst OFFLINE_MS = 10*60*1000; // 10 דקות ללא קריאה -> לא מגיב\nconst OFFLINE_CHECK_MS = 60000; // בדיקת \"לא מגיב\" כל דקה\n\nfunction AppInner(){\n  const { push } = useToasts();\n  const [areas, setAreas] = useState([]);\n  const [areaId, setAreaId] = useState(null);\n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [adminMode, setAdminMode] = useState(false);\n\n  const [areaModalOpen, setAreaModalOpen] = useState(false);\n  const [editingArea, setEditingArea] = useState(null);\n  const [sensorModalOpen, setSensorModalOpen] = useState(false);\n  const [editingSensor, setEditingSensor] = useState(null);\n\n  const [selectedSensor, setSelectedSensor] = useState(null);\n  const [selectedValues, setSelectedValues] = useState([]);\n\n  const [placeMode, setPlaceMode] = useState(null);\n\n  // מזהה סנסורים לא מגיבים (IDs)\n  const [offlineIds, setOfflineIds] = useState(new Set());\n\n  useEffect(() => {\n    setLoading(true);\n    listAreas().then(d => { setAreas(d); if (d[0]) setAreaId(d[0].id); })\n      .catch(e => { setError(e.message); push('error','טעינת אזורים נכשלה'); })\n      .finally(() => setLoading(false));\n  }, []);\n\n  // טעינה + רענון אוטומטי של סנסורים\n  useEffect(() => {\n    if (!areaId){ setSensors([]); return; }\n\n    let alive = true;\n\n    async function load(){\n      try{\n        const xs = await listSensors(areaId);\n        // הזרקת דגל __offline לפני ההצגה\n        const withFlags = xs.map(s => ({ ...s, __offline: offlineIds.has(s.id) }));\n        if (alive) setSensors(withFlags);\n      }catch(e){\n        setError(e.message); push('error','טעינת סנסורים נכשלה');\n      }\n    }\n    load();\n    const t = setInterval(load, POLL_MS);\n    return () => { alive = false; clearInterval(t); };\n  }, [areaId, offlineIds, push]);\n\n  // בדיקת \"לא מגיב\" – פינג לקריאה אחת לכל סנסור כל דקה\n  useEffect(() => {\n    if (!areaId || sensors.length===0) return;\n    let alive = true;\n\n    async function check(){\n      try{\n        const ids = new Set(offlineIds);\n        await Promise.all(sensors.map(async s => {\n          try{\n            const vs = await getSensorValues(s.id, 1);\n            const ts = vs?.[0]?.recorded_at ? new Date(vs[0].recorded_at).getTime() : 0;\n            const isOffline = !ts || (Date.now() - ts) > OFFLINE_MS;\n            if (isOffline) ids.add(s.id); else ids.delete(s.id);\n          }catch{ ids.add(s.id); } // אם כשל – נחשב לא מגיב\n        }));\n        if (alive) setOfflineIds(ids);\n      }catch{/* מתעלמים */}\n    }\n    check();\n    const t = setInterval(check, OFFLINE_CHECK_MS);\n    return () => { alive = false; clearInterval(t); };\n  }, [areaId, sensors]);\n\n  function openAddArea(){ setEditingArea(null); setAreaModalOpen(true); }\n  function openEditArea(){ if(!areaId) return push('error','בחר אזור'); setEditingArea(areas.find(a=>a.id===areaId)||null); setAreaModalOpen(true); }\n  async function onSubmitArea(payload){\n    try{\n      if (editingArea){\n        const upd = await updateArea(editingArea.id, payload);\n        setAreas(xs => xs.map(a => a.id===upd.id ? upd : a));\n        push('info','האזור עודכן');\n      } else {\n        const created = await createArea(payload);\n        setAreas(xs => [...xs, created]); setAreaId(created.id);\n        push('info','אזור נוסף');\n      }\n      setAreaModalOpen(false);\n    }catch(e){ setError(e.message); push('error','שמירת אזור נכשלה'); }\n  }\n  async function onDeleteArea(){\n    if (!areaId) return push('error','בחר אזור למחיקה');\n    if (!confirm('למחוק את האזור?')) return;\n    try{ await deleteArea(areaId); setAreas(xs=>xs.filter(a=>a.id!==areaId)); setAreaId(null); setSensors([]); push('info','האזור נמחק'); }\n    catch(e){ setError(e.message); push('error','מחיקת אזור נכשלה'); }\n  }\n\n  function openAddSensor(){ if(!areaId) return push('error','בחר אזור קודם'); setPlaceMode({ kind:'sensor' }); push('info','לחץ על המפה כדי למקם סנסור'); }\n  function openAddShade(){  if(!areaId) return push('error','בחר אזור קודם'); setPlaceMode({ kind:'shade'  }); push('info','לחץ על המפה כדי למקם מערכת הצללה'); }\n\n  function openEditSensorFromDrawer(s){\n    if (!s) return;\n    setSelectedSensor(s);\n    getSensorValues(s.id, 50).then(setSelectedValues).catch(()=>setSelectedValues([]));\n  }\n\n  async function onSubmitSensor(payload){\n    try{\n      if (editingSensor && editingSensor.id){\n        const upd = await updateSensor(editingSensor.id, payload);\n        setSensors(xs => xs.map(s => s.id===upd.id ? { ...upd, __offline: offlineIds.has(upd.id) } : s));\n        push('info','הסנסור עודכן');\n      } else {\n        const created = await createSensor({ ...payload, area_id: areaId });\n        setSensors(xs => [...xs, { ...created, __offline:false }]);\n        push('info', payload.type === 'shade' ? 'יחידת הצללה נוספה' : 'סנסור נוסף');\n      }\n      setSensorModalOpen(false);\n      setEditingSensor(null);\n    }catch(e){ setError(e.message); push('error','שמירת סנסור נכשלה'); }\n  }\n\n  async function onDeleteSensorFromDrawer(){\n    if (!selectedSensor) return;\n    if (!confirm('למחוק את הסנסור?')) return;\n    try{ await deleteSensor(selectedSensor.id); setSensors(xs=>xs.filter(s=>s.id!==selectedSensor.id)); setSelectedSensor(null); push('info','סנסור נמחק'); }\n    catch(e){ setError(e.message); push('error','מחיקה נכשלה'); }\n  }\n\n  async function onToggleActiveFromDrawer(){\n    if (!selectedSensor) return;\n    try{\n      const upd = await setSensorActive(selectedSensor.id, !selectedSensor.is_active);\n      setSensors(xs => xs.map(s => s.id===upd.id ? { ...upd, __offline: offlineIds.has(upd.id) } : s));\n      setSelectedSensor(upd);\n      push('info', `סטטוס: ${upd.is_active?'פעיל/פתוח':'כבוי/סגור'}`);\n    }catch(e){ setError(e.message); push('error','עדכון סטטוס נכשל'); }\n  }\n\n  async function onMoveSensor(id, x, y){\n    try{\n      const upd = await updateSensorPosition(id, x, y);\n      setSensors(xs => xs.map(s => s.id===id ? { ...upd, __offline: offlineIds.has(id) } : s));\n      if (selectedSensor && selectedSensor.id===id) setSelectedSensor(upd);\n    }catch(e){ setError(e.message); push('error','עדכון מיקום נכשל'); }\n  }\n\n  function onPlaceRequest(x, y){\n    if (!placeMode) return;\n    if (placeMode.kind === 'shade'){\n      setEditingSensor({ name:'Shading', type:'shade', x, y, is_active:true });\n    } else {\n      setEditingSensor({ name:'Sensor', type:'', x, y, is_active:true });\n    }\n    setSensorModalOpen(true);\n    setPlaceMode(null);\n  }\n\n  async function onMapSizeDetected(nw, nh){\n    const area = (areas||[]).find(a => a.id===areaId);\n    if (!area) return;\n    if (!area.width || !area.height){\n      try{\n        const upd = await updateArea(area.id, { width: nw, height: nh });\n        setAreas(xs => xs.map(a => a.id===upd.id ? upd : a));\n      }catch{ /* ממשיכים גם בלי */ }\n    }\n  }\n\n  async function onShadeAutoApply(shouldOpen){\n    try{\n      const shades = (sensors||[]).filter(s => String(s.type||'').toLowerCase()==='shade');\n      for (const sh of shades){\n        if (Boolean(sh.is_active) !== Boolean(shouldOpen)){\n          const upd = await setSensorActive(sh.id, shouldOpen);\n          setSensors(xs => xs.map(s => s.id===upd.id ? { ...upd, __offline: offlineIds.has(upd.id) } : s));\n          if (selectedSensor && selectedSensor.id===upd.id) setSelectedSensor(upd);\n        }\n      }\n      push('info', shouldOpen ? 'ההצללה נפתחה אוטומטית' : 'ההצללה נסגרה אוטומטית');\n    }catch(e){ setError(e.message); push('error','כשל בהפעלת אוטומציה'); }\n  }\n\n  return (\n    <>\n      <Dashboard\n        areas={areas} areaId={areaId} onPickArea={setAreaId}\n        sensors={sensors}\n        selectedSensor={selectedSensor} selectedValues={selectedValues}\n        loading={loading} error={error}\n        adminMode={adminMode} setAdminMode={setAdminMode}\n        onAddArea={openAddArea} onEditArea={openEditArea} onDeleteArea={onDeleteArea}\n        onAddSensor={openAddSensor} onAddShade={openAddShade}\n        onEditSensorFromDrawer={openEditSensorFromDrawer}\n        onDeleteSensorFromDrawer={onDeleteSensorFromDrawer}\n        onToggleActiveFromDrawer={onToggleActiveFromDrawer}\n        onMoveSensor={onMoveSensor}\n        onCloseDrawer={()=>{ setSelectedSensor(null); setSelectedValues([]); }}\n        onMapSizeDetected={onMapSizeDetected}\n        onPlaceRequest={onPlaceRequest}\n        onShadeAutoApply={onShadeAutoApply}\n      />\n\n      <Modal open={areaModalOpen} title={editingArea ? 'עריכת אזור' : 'אזור חדש'} onClose={() => setAreaModalOpen(false)}>\n        <AreaForm initial={editingArea||{}} onSubmit={onSubmitArea} />\n      </Modal>\n\n      <Modal open={sensorModalOpen} title={editingSensor?.id ? 'עריכת סנסור' : (editingSensor?.type==='shade' ? 'מערכת הצללה חדשה' : 'סנסור חדש')} onClose={() => { setSensorModalOpen(false); setEditingSensor(null); }}>\n        <SensorForm initial={editingSensor||{}} areaId={areaId} onSubmit={onSubmitSensor} />\n      </Modal>\n    </>\n  );\n}\n\nexport default function App(){ return (<ToastProvider><AppInner/></ToastProvider>); }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}