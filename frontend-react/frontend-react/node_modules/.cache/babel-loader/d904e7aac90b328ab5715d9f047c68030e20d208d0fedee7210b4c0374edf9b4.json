{"ast":null,"code":"const API = process.env.REACT_APP_API_BASE || 'http://localhost:3001';\nexport async function listAreas() {\n  const r = await fetch(`${API}/api/areas`);\n  if (!r.ok) throw new Error('listAreas failed');\n  return r.json();\n}\nexport async function createArea(payload) {\n  const r = await fetch(`${API}/api/areas`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error('createArea failed');\n  return r.json();\n}\nexport async function updateArea(id, payload) {\n  const r = await fetch(`${API}/api/areas/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!r.ok) throw new Error('updateArea failed');\n  return r.json();\n}\nexport async function deleteArea(id) {\n  const r = await fetch(`${API}/api/areas/${id}`, {\n    method: 'DELETE'\n  });\n  if (!r.ok) throw new Error('deleteArea failed');\n  return r.json();\n}","map":{"version":3,"names":["API","process","env","REACT_APP_API_BASE","listAreas","r","fetch","ok","Error","json","createArea","payload","method","headers","body","JSON","stringify","updateArea","id","deleteArea"],"sources":["C:/Users/DAN/Desktop/fullProject/frontend-react/frontend-react/src/api/areas.js"],"sourcesContent":["const API = process.env.REACT_APP_API_BASE || 'http://localhost:3001';\r\n\r\nexport async function listAreas() {\r\n  const r = await fetch(`${API}/api/areas`);\r\n  if (!r.ok) throw new Error('listAreas failed');\r\n  return r.json();\r\n}\r\nexport async function createArea(payload) {\r\n  const r = await fetch(`${API}/api/areas`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });\r\n  if (!r.ok) throw new Error('createArea failed');\r\n  return r.json();\r\n}\r\nexport async function updateArea(id, payload) {\r\n  const r = await fetch(`${API}/api/areas/${id}`, { method:'PUT', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) });\r\n  if (!r.ok) throw new Error('updateArea failed');\r\n  return r.json();\r\n}\r\nexport async function deleteArea(id) {\r\n  const r = await fetch(`${API}/api/areas/${id}`, { method:'DELETE' });\r\n  if (!r.ok) throw new Error('deleteArea failed');\r\n  return r.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,uBAAuB;AAErE,OAAO,eAAeC,SAASA,CAAA,EAAG;EAChC,MAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,YAAY,CAAC;EACzC,IAAI,CAACK,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;EAC9C,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACxC,MAAMN,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,YAAY,EAAE;IAAEY,MAAM,EAAC,MAAM;IAAEC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAAE,CAAC,CAAC;EACxI,IAAI,CAACN,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EAC/C,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeQ,UAAUA,CAACC,EAAE,EAAEP,OAAO,EAAE;EAC5C,MAAMN,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,cAAckB,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAC;MAAC,cAAc,EAAC;IAAkB,CAAC;IAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAAE,CAAC,CAAC;EAC7I,IAAI,CAACN,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EAC/C,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB;AACA,OAAO,eAAeU,UAAUA,CAACD,EAAE,EAAE;EACnC,MAAMb,CAAC,GAAG,MAAMC,KAAK,CAAC,GAAGN,GAAG,cAAckB,EAAE,EAAE,EAAE;IAAEN,MAAM,EAAC;EAAS,CAAC,CAAC;EACpE,IAAI,CAACP,CAAC,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;EAC/C,OAAOH,CAAC,CAACI,IAAI,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}